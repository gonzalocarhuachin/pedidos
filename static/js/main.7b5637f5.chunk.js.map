{"version":3,"sources":["variables/variables.js","pages/clientes/componentes/ClienteForm.js","components/Cargando.js","pages/clientes/componentes/ClienteFila.js","pages/clientes/componentes/ClientesTabla.js","pages/clientes/Clientes.js","servicios/RepartidorService.js","servicios/ClienteService.js","servicios/ProductoService.js","pages/pedidos/componentes/PedidoForm.js","pages/pedidos/componentes/PedidoFila.js","pages/pedidos/componentes/PedidosTabla.js","pages/pedidos/Pedidos.js","pages/repartidores/componentes/RepartidorFila.js","pages/repartidores/componentes/RepartidoresTabla.js","pages/repartidores/componentes/RepartidorFormV2.js","pages/repartidores/Repartidores.js","pages/productos/componentes/ProductoForm.js","pages/productos/componentes/ProductoFila.js","pages/productos/componentes/ProductosTabla.js","pages/productos/Productos.js","pages/home/Home.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["URL_BACKEND","ClienteForm","getClientes","objCliente","setObjCliente","formVacio","cli_nom","cli_ape","cli_est","cli_dni","useState","formulario","setFormulario","useEffect","handleChange","e","target","name","value","className","onSubmit","preventDefault","trim","Swal","fire","icon","title","text","showCancelButton","then","result","console","log","nuevoCliente","endpoint","id","fetch","method","headers","body","JSON","stringify","response","json","data","timer","putCliente","postCliente","htmlFor","type","onChange","Cargando","tipo","texto","claseAlerta","role","ClienteFila","cliente","numero","checked","setChecked","onClick","ClientesTabla","clientes","map","i","key","Clientes","cargando","setCargando","setClientes","RepartidorService","Promise","resolve","reject","repartidores","ClienteService","this","ProductoService","productos","formularioVacio","id_pro","id_rep","id_cli","ped_ini","ped_fin","ped_est","ped_fech","PedidoForm","getPedidos","objPedido","setObjPedido","setRepartidores","setProductos","repService","cliService","proService","llenarSelects","a","getAllRepartidores","arrayRepartidores","getAllClientes","arrayClientes","getAllProductos","arrayProductos","nuevoPedido","putPedido","postPedido","producto","pro_nom","pro_prec","repartidor","rep_nom","rep_ape","PedidoFila","pedido","PedidosTabla","pedidos","Pedidos","setPedidos","RepartidorFila","setObjRepartidor","rep_est","nuevoRepartidor","rep_dni","RepartidoresTabla","RepartidorFormV2","getRepartidores","objRepartidor","putRepartidor","postRepartidor","Repartidores","ProductoForm","getProductos","objProducto","setObjProducto","pro_img","pro_est","nuevoProducto","putProducto","postProducto","ProductoFila","ProductosTabla","Productos","Home","Header","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7b5637f5.chunk.js","sourcesContent":["export const URL_BACKEND = `https://5ec8643e155c130016a909bf.mockapi.io`;","import React, { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { URL_BACKEND } from '../../../variables/variables';\r\n\r\nconst ClienteForm = ({getClientes, objCliente, setObjCliente}) => {\r\n\r\n    let formVacio = {\r\n        cli_nom: '',\r\n        cli_ape: '',\r\n        cli_est: '',\r\n        cli_dni: ''\r\n      };\r\n\r\n    const [formulario, setFormulario] = useState({});\r\n    \r\n    useEffect(() =>\r\n    {\r\n        if(objCliente)\r\n        {\r\n            setFormulario(objCliente);\r\n        }\r\n        else\r\n        {\r\n            setFormulario(formVacio);\r\n        }\r\n    }, [objCliente])\r\n\r\n    const handleChange = (e) =>\r\n    {\r\n        setFormulario(\r\n            {\r\n                ...formulario,\r\n                [e.target.name]: e.target.value\r\n            })\r\n    }\r\n\r\n    const postCliente = (nuevoCliente) =>\r\n    {\r\n        const endpoint = `${URL_BACKEND}/cliente`;\r\n\r\n        fetch(endpoint, {\r\n            method: 'POST',\r\n            body: JSON.stringify(nuevoCliente),\r\n            headers: {\r\n              \"Content-type\": \"application/json\"\r\n            }\r\n          }).then((response) => {\r\n            response.json().then((data) => {\r\n              Swal.fire({\r\n                title: 'Éxito!',\r\n                icon: 'success',\r\n                text: 'El Cliente ha sido creado con éxito en la base de datos',\r\n                timer: 2000,\r\n              });\r\n              getClientes();\r\n            })\r\n          })\r\n    }\r\n\r\n    const putCliente = (nuevoCliente) => {\r\n        const endpoint = `${URL_BACKEND}/cliente/${objCliente.id}`;\r\n        fetch(endpoint, {\r\n          method: 'PUT',\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(nuevoCliente)\r\n        }).then((response) => {\r\n          response.json().then((data) => {\r\n            Swal.fire({\r\n              title: \"Actualizado!\",\r\n              text: \"Registro actualizado correctamente\",\r\n              icon: \"success\",\r\n              timer: 1500\r\n            });\r\n            getClientes();\r\n            setObjCliente(null);\r\n          })\r\n        })\r\n    }\r\n    \r\n    const enviarFormulario = (e) => {\r\n        e.preventDefault()\r\n        if(formulario.cli_nom.trim() === \"\" ||formulario.cli_ape.trim() === \"\" ||formulario.cli_dni.trim() === \"\" ||formulario.cli_est.trim() === \"\")\r\n        {\r\n          Swal.fire(\r\n            {\r\n              icon: \"error\",\r\n              title: \"Oe!\",\r\n              text: \"Todos los campos deben estar llenos\"\r\n            }\r\n          )\r\n        }\r\n        else\r\n        {\r\n          if (objCliente) {\r\n            Swal.fire({\r\n              title: '¿Seguro que desea editar el registro?',\r\n              icon: 'info',\r\n              text: 'Los cambios harán efecto de inmediato en la base de datos',\r\n              showCancelButton: true\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                console.log(\"OK PODEMOS EDITAR AL CLIENTE\");\r\n                putCliente(formulario);\r\n              }\r\n            })\r\n          } else {\r\n            Swal.fire({\r\n              title: '¿Seguro que desea crear el registro?',\r\n              icon: 'info',\r\n              text: 'Los cambios harán efecto de inmediato en la base de datos',\r\n              showCancelButton: true\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                console.log(\"OK PODEMOS CREAR AL USUARIO\");\r\n                postCliente(formulario);\r\n              }\r\n            })\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">Registrar Cliente</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form className=\"row\" onSubmit={enviarFormulario}>\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"\">Nombre:</label>\r\n                <input type=\"text\" name=\"cli_nom\"\r\n                  className=\"form-control\"\r\n                  onChange={handleChange}\r\n                  value={formulario.cli_nom} />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"\">Apellido:</label>\r\n                <input type=\"text\" name=\"cli_ape\"\r\n                  className=\"form-control\" onChange={handleChange}\r\n                  value={formulario.cli_ape} />\r\n    \r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"\">Estado:</label>\r\n                <select className=\"form-control\" name=\"cli_est\"\r\n                  onChange={handleChange}\r\n                  value={formulario.cli_est}>\r\n                  <option value=\"\">-Seleccione-</option>\r\n                  <option value=\"true\">Activo</option>\r\n                  <option value=\"false\">Inactivo</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"\">Dni:</label>\r\n                <input type=\"text\" name=\"cli_dni\"\r\n                  className=\"form-control\"\r\n                  value={formulario.cli_dni}\r\n                  onChange={handleChange} />\r\n    \r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                {\r\n                  objCliente ?\r\n                    <button className=\"btn btn-success btn-block\" type=\"submit\">\r\n                      Actualizar Cliente\r\n                    </button> :\r\n                    <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n                      Crear Cliente\r\n                    </button>\r\n                }\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <button className=\"btn btn-danger btn-block\" type=\"button\">\r\n                  Cancelar\r\n          </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default ClienteForm\r\n","import React from 'react';\r\n\r\nconst Cargando = ({tipo, texto}) => {\r\n\r\n    let claseAlerta = \"\";\r\n    switch (tipo) {\r\n        case \"success\":\r\n            claseAlerta = \"alert alert-success text-center\";\r\n            break;\r\n        case \"danger\":\r\n            claseAlerta = \"alert alert-danger text-center\";\r\n            break;\r\n        case \"warning\":\r\n            claseAlerta = \"alert alert-warning text-center\";\r\n            break;\r\n        case \"info\":\r\n            claseAlerta = \"alert alert-info text-center\";\r\n            break;\r\n        default:\r\n            claseAlerta = \"alert alert-light text-center\";\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={claseAlerta} role=\"alert\">\r\n              <h4 className=\"alert-heading\">Cargando...</h4>\r\n              <p>{texto}</p>\r\n              <p className=\"mb-0\"></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cargando;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'react-switch';\r\nimport { URL_BACKEND } from '../../../variables/variables';\r\n\r\nconst ClienteFila = ({cliente, numero, setObjCliente}) => {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const putCliente = () =>\r\n    {\r\n        let nuevoCliente = {...cliente}\r\n        nuevoCliente.cli_est = !checked + \"\"; //Convertir en string\r\n        const endpoint = `${URL_BACKEND}/cliente/${cliente.id}`;\r\n        fetch(endpoint, \r\n            {\r\n                method: 'PUT',\r\n                headers: {\"Content-type\": \"application/json\"},\r\n                body: JSON.stringify(nuevoCliente)\r\n            }).then((response) =>\r\n            {\r\n                response.json().then((data) =>\r\n                {\r\n                    setChecked(!checked);\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(cliente.cli_est === \"true\")\r\n        {\r\n            setChecked(true);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <tr>\r\n            <td>{numero}</td>\r\n            <td>{cliente.id}</td>\r\n            <td>{cliente.cli_nom}</td>\r\n            <td>{cliente.cli_ape}</td>\r\n            <td>\r\n                {\r\n                    cliente.cli_est === \"true\" ?\r\n                    <span className=\"badge badge-success\">Activo</span> :\r\n                    <span className=\"badge badge-danger\">Inactivo</span>\r\n                }\r\n                <Switch checked={checked} onChange={putCliente} />\r\n            </td>\r\n            <td>{cliente.cli_dni}</td>\r\n            <td><button className=\"btn btn-info\" onClick={() => \r\n                {\r\n                    setObjCliente({cliente});\r\n                }}>Editar</button></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ClienteFila;\r\n","import React from 'react';\r\nimport ClienteFila from './ClienteFila';\r\n\r\nconst ClientesTabla = ({clientes, setObjCliente}) => {\r\n    return (\r\n        <table className=\"table table-hover table-bordered table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th><strong>#</strong></th>\r\n                    <th>Id</th>\r\n                    <th>Nombre</th>\r\n                    <th>Apellido</th>\r\n                    <th>Estado</th>\r\n                    <th>DNI</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    clientes.map((cliente, i) => \r\n                    {\r\n                        return <ClienteFila numero={i} cliente={cliente} key={cliente.id} setObjCliente={setObjCliente}/>\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default ClientesTabla;\r\n","import React, { Fragment, useState,useEffect } from 'react';\r\nimport ClienteForm from './componentes/ClienteForm';\r\nimport Cargando from '../../components/Cargando';\r\nimport ClientesTabla from './componentes/ClientesTabla';\r\n\r\nconst Clientes = () => {\r\n\r\n    const endpoint = \"https://5ec8643e155c130016a909bf.mockapi.io/cliente\";\r\n    const [cargando, setCargando] = useState(true);\r\n    const [clientes, setClientes] = useState([]);\r\n    const [objCliente, setObjCliente] = useState(null);\r\n\r\n    const getClientes = () =>\r\n    {\r\n        if(!cargando)\r\n        {\r\n            setCargando(true);\r\n        }\r\n\r\n        fetch(endpoint).then((response) =>\r\n        {\r\n            response.json().then((data) =>\r\n            {\r\n                setCargando(false);\r\n                setClientes(data);\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        getClientes();\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8\">\r\n                    <ClienteForm getClientes={getClientes} objCliente={objCliente} setObjCliente={setObjCliente}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8\">\r\n                    {\r\n                        cargando === true ? <Cargando tipo=\"info\" texto=\"Cargando clientes\"/> : <ClientesTabla clientes={clientes} setObjCliente={setObjCliente}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Clientes;\r\n","import { URL_BACKEND } from \"../variables/variables\";\r\n\r\nexport class RepartidorService\r\n{\r\n    //atributo de clase, no se declara como variable\r\n    endpoint = \"/repartidor\";\r\n\r\n    //Funcion que trae a todos los repartidores\r\n    getAllRepartidores()\r\n    {\r\n        return new Promise((resolve, reject) => \r\n        {\r\n            fetch(`${URL_BACKEND}${this.endpoint}`).then((response) =>\r\n        {\r\n            response.json().then((repartidores) =>\r\n            {\r\n                resolve(repartidores);\r\n            })\r\n        })\r\n        })\r\n    }\r\n}","import { URL_BACKEND } from \"../variables/variables\";\r\n\r\nexport class ClienteService\r\n{\r\n    endpoint = '/cliente';\r\n    async getAllClientes()\r\n    {\r\n        //los await funcionan en una funcion que lleva el prefijo async\r\n        //la funcion async no retorna la lista, retorna una promesa\r\n        let response = await fetch(`${URL_BACKEND}${this.endpoint}`);\r\n        let clientes = await response.json();\r\n        return clientes;\r\n\r\n        // .then((response) =>\r\n        // {\r\n        //     response.json().then((clientes) =>\r\n        //     {\r\n        //         resolve(clientes);\r\n        //     })\r\n        // })\r\n    }\r\n}","import { URL_BACKEND } from \"../variables/variables\";\r\n\r\nexport class ProductoService\r\n{\r\n    endpoint = '/producto';\r\n    async getAllProductos()\r\n    {\r\n        let response = await fetch(`${URL_BACKEND}${this.endpoint}`);\r\n        let productos = await response.json();\r\n        return productos;\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { RepartidorService } from '../../../servicios/RepartidorService';\r\nimport { ClienteService } from '../../../servicios/ClienteService';\r\nimport { ProductoService } from '../../../servicios/ProductoService';\r\nimport Swal from 'sweetalert2';\r\nimport { URL_BACKEND } from '../../../variables/variables';\r\n\r\nconst formularioVacio =\r\n{\r\n    id_pro: \"\",\r\n    id_rep: \"\",\r\n    id_cli: \"\",\r\n    ped_ini: \"\",\r\n    ped_fin: \"\",\r\n    ped_est: \"\",\r\n    ped_fech: \"\"\r\n}\r\n\r\nconst PedidoForm = ({getPedidos, objPedido, setObjPedido}) => {\r\n\r\n    const [formulario, setFormulario] = useState(formularioVacio);\r\n    const [repartidores, setRepartidores] = useState([]);\r\n    const [clientes, setClientes] = useState([]);\r\n    const [productos, setProductos] = useState([]);\r\n    let repService = new RepartidorService();\r\n    let cliService = new ClienteService();\r\n    let proService = new ProductoService();\r\n    const handleChange = (e) =>\r\n    {\r\n        setFormulario(\r\n            {\r\n                ...formulario, \r\n                [e.target.name]: e.target.value\r\n            })\r\n    }\r\n\r\n    const llenarSelects = async () =>\r\n    {\r\n        let arrayRepartidores = await repService.getAllRepartidores();\r\n        setRepartidores(arrayRepartidores);\r\n        let arrayClientes = await cliService.getAllClientes();\r\n        setClientes(arrayClientes);\r\n        let arrayProductos = await proService.getAllProductos();\r\n        setProductos(arrayProductos);\r\n\r\n        return 10000;\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        llenarSelects();\r\n    }, [])\r\n\r\n    const postPedido = (nuevoPedido) =>\r\n    {\r\n        const endpoint = `${URL_BACKEND}/pedido`;\r\n\r\n        fetch(endpoint, {\r\n            method: 'POST',\r\n            body: JSON.stringify(nuevoPedido),\r\n            headers: {\r\n              \"Content-type\": \"application/json\"\r\n            }\r\n          }).then((response) => {\r\n            response.json().then((data) => {\r\n              Swal.fire({\r\n                title: 'Éxito!',\r\n                icon: 'success',\r\n                text: 'El Pedido ha sido creado con éxito en la base de datos',\r\n                timer: 2000,\r\n              });\r\n              getPedidos();\r\n            })\r\n          })\r\n    }\r\n\r\n    const putPedido = (nuevoPedido) => {\r\n        const endpoint = `${URL_BACKEND}/pedido/${objPedido.id}`;\r\n        fetch(endpoint, {\r\n          method: 'PUT',\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(nuevoPedido)\r\n        }).then((response) => {\r\n          response.json().then((data) => {\r\n            Swal.fire({\r\n              title: \"Actualizado!\",\r\n              text: \"Registro actualizado correctamente\",\r\n              icon: \"success\",\r\n              timer: 1500\r\n            });\r\n            getPedidos();\r\n            setObjPedido(null);\r\n          })\r\n        })\r\n    }\r\n\r\n    const enviarFormulario = (e) => {\r\n        e.preventDefault()\r\n        if(formulario.id_pro.trim() === \"\" ||formulario.id_rep.trim() === \"\" ||formulario.id_cli.trim() === \"\" ||formulario.ped_ini.trim() === \"\" || formulario.ped_fin.trim() === \"\" || formulario.ped_est.trim() === \"\" || formulario.ped_fech.trim() === \"\")\r\n        {\r\n          Swal.fire(\r\n            {\r\n              icon: \"error\",\r\n              title: \"Oe!\",\r\n              text: \"Todos los campos deben estar llenos\"\r\n            }\r\n          )\r\n        }\r\n        else\r\n        {\r\n          if (objPedido) {\r\n            Swal.fire({\r\n              title: '¿Seguro que desea editar el registro?',\r\n              icon: 'info',\r\n              text: 'Los cambios harán efecto de inmediato en la base de datos',\r\n              showCancelButton: true\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                console.log(\"OK PODEMOS EDITAR EL PEDIDO\");\r\n                putPedido(formulario);\r\n              }\r\n            })\r\n          } else {\r\n            Swal.fire({\r\n              title: '¿Seguro que desea crear el registro?',\r\n              icon: 'info',\r\n              text: 'Los cambios harán efecto de inmediato en la base de datos',\r\n              showCancelButton: true\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                console.log(\"OK PODEMOS CREAR EL PEDIDO\");\r\n                postPedido(formulario);\r\n              }\r\n            })\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n         <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n           <div className=\"card-header\">\r\n            <h3 className=\"card-title\">Formulario de Pedidos</h3>\r\n           </div>\r\n           <div className=\"card-body\">\r\n            <form className=\"row\" onSubmit={enviarFormulario}>\r\n             <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"\">Seleccione Producto</label>\r\n              <select name=\"id_pro\" onChange={handleChange} value={formulario.id_pro} id=\"\" className=\"form-control\">\r\n               {\r\n                   productos.map((producto) =>\r\n                   {\r\n                    return (<option value={producto.id} key={producto.id}>\r\n                        {producto.pro_nom} - S/.{producto.pro_prec}\r\n                        </option>)\r\n                   })\r\n               }\r\n              </select>\r\n             </div>\r\n             <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"\">Seleccione Repartidor</label>\r\n              <select name=\"id_rep\" onChange={handleChange} value={formulario.id_rep} id=\"\" className=\"form-control\">\r\n               {\r\n                   repartidores.map((repartidor) =>\r\n                   {\r\n                    return (<option value={repartidor.id} key={repartidor.id}>\r\n                        {repartidor.rep_nom} {repartidor.rep_ape}\r\n                        </option>)\r\n                   })\r\n               }\r\n              </select>\r\n             </div>\r\n             <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"\">Seleccione Cliente</label>\r\n              <select name=\"id_cli\" onChange={handleChange} value={formulario.id_cli} id=\"\" className=\"form-control\">\r\n               {\r\n                   clientes.map((cliente) =>\r\n                   {\r\n                    return (<option value={cliente.id} key={cliente.id}>\r\n                        {cliente.cli_nom} {cliente.cli_ape}\r\n                        </option>)\r\n                   })\r\n               }\r\n              </select>\r\n             </div>\r\n             <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"\">Entrega Inicio</label>\r\n              <input type=\"text\" name=\"ped_ini\" onChange={handleChange} value={formulario.ped_ini} className=\"form-control\" />\r\n             </div>\r\n             <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"\">Entrega Fin</label>\r\n              <input type=\"text\" name=\"ped_fin\" onChange={handleChange} value={formulario.ped_fin} className=\"form-control\" />\r\n             </div>\r\n             <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"\">Estado</label>\r\n              <select name=\"ped_est\" onChange={handleChange} value={formulario.ped_est} id=\"\" className=\"form-control\">\r\n               <option value=\"\">Seleccione</option>\r\n               <option value=\"true\">Entregado</option>\r\n                <option value=\"false\">Pendiente</option>\r\n              </select>\r\n             </div>\r\n             <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"\">Fecha</label>\r\n              <input type=\"date\" name=\"ped_fech\" onChange={handleChange} value={formulario.ped_fech} className=\"form-control\" />\r\n             </div>\r\n             <div className=\"row\">\r\n                 <div className=\"form-group col-md-6\">\r\n                     {\r\n                         objPedido ?\r\n                         <button className=\"btn btn-success btn-block\" type=\"submit\">\r\n                           Actualizar Pedido\r\n                         </button> :\r\n                         <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n                           Crear Pedido\r\n                         </button>\r\n                     }\r\n                 </div>\r\n                 <div className=\"form-group col-md-6\">\r\n                     <button className=\"btn btn-block btn-danger\" type=\"button\">Cancelar</button>\r\n                 </div>\r\n             </div>\r\n            </form>\r\n           </div>\r\n          </div>\r\n         </div>\r\n        </div>\r\n       )\r\n}\r\n\r\nexport default PedidoForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'react-switch';\r\nimport { URL_BACKEND } from '../../../variables/variables';\r\n\r\nconst PedidoFila = ({pedido, numero, setObjPedido}) => {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const putPedido = () =>\r\n    {\r\n        let nuevoPedido = {...pedido}\r\n        nuevoPedido.ped_est = !checked + \"\";\r\n        const endpoint = `${URL_BACKEND}/pedido/${pedido.id}`;\r\n\r\n        fetch(endpoint, \r\n            {\r\n                method: 'PUT',\r\n                headers: {\"Content-type\": \"application/json\"},\r\n                body: JSON.stringify(nuevoPedido)\r\n            }).then((response) =>\r\n            {\r\n                response.json().then((data) =>\r\n                {\r\n                    setChecked(!checked);\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(pedido.ped_est === \"true\")\r\n        {\r\n            setChecked(true);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <tr>\r\n            <td>{numero}</td>\r\n            <td>{pedido.id}</td>\r\n            <td>{pedido.id_pro}</td>\r\n            <td>{pedido.id_rep}</td>\r\n            <td>{pedido.id_cli}</td>\r\n            <td>{pedido.ped_ini}</td>\r\n            <td>{pedido.ped_fin}</td>\r\n            <td>\r\n                {\r\n                    pedido.ped_est === \"true\" ?\r\n                    <span className=\"badge badge-success\">Entregado</span> :\r\n                    <span className=\"badge badge-danger\">Pendiente</span>\r\n                }\r\n                <Switch checked={checked} onChange={putPedido} />\r\n            </td>\r\n            <td>{pedido.ped_fech}</td>\r\n            <td><button className=\"btn btn-info\" onClick={() => \r\n                {\r\n                    setObjPedido({pedido});\r\n                }\r\n            }>Editar</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default PedidoFila;\r\n","import React from 'react';\r\nimport PedidoFila from './PedidoFila';\r\n\r\nconst PedidosTabla = ({pedidos, setObjPedido}) => {\r\n    return (\r\n        <table className=\"table table-hover table-bordered table-striped mt-3\">\r\n            <thead>\r\n                <tr>\r\n                    <th><strong>#</strong></th>\r\n                    <th>Id</th>\r\n                    <th>Producto</th>\r\n                    <th>Repartidor</th>\r\n                    <th>Cliente</th>\r\n                    <th>Entrega Inicio</th>\r\n                    <th>Entrega Fin</th>\r\n                    <th>Estado</th>\r\n                    <th>Fecha</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    pedidos.map((pedido, i) => \r\n                    {\r\n                        return <PedidoFila numero={i} pedido={pedido} key={pedido.id} setObjPedido={setObjPedido}/>\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default PedidosTabla;\r\n","import React, { Fragment, useState,useEffect } from 'react';\r\nimport PedidoForm from './componentes/PedidoForm';\r\nimport Cargando from '../../components/Cargando';\r\nimport PedidosTabla from './componentes/PedidosTabla';\r\n\r\nconst Pedidos = () => {\r\n\r\n    const endpoint = \"https://5ec8643e155c130016a909bf.mockapi.io/pedido\";\r\n    const [cargando, setCargando] = useState(true);\r\n    const [pedidos, setPedidos] = useState([]);\r\n    const [objPedido, setObjPedido] = useState(null);\r\n\r\n    const getPedidos = () =>\r\n    {\r\n        if(!cargando)\r\n        {\r\n            setCargando(true);\r\n        }\r\n\r\n        fetch(endpoint).then((response) =>\r\n        {\r\n            response.json().then((data) =>\r\n            {\r\n                setCargando(false);\r\n                setPedidos(data);\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        getPedidos();\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <PedidoForm getPedidos={getPedidos} objPedido={objPedido} setObjPedido={setObjPedido}/>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-10\">\r\n                    {\r\n                        cargando === true ? <Cargando tipo=\"info\" texto=\"Cargando Pedidos\"/> : <PedidosTabla pedidos={pedidos} setObjPedido={setObjPedido}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Pedidos;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'react-switch';\r\nimport { URL_BACKEND } from '../../../variables/variables';\r\n\r\nconst RepartidorFila = ({repartidor, numero, setObjRepartidor}) => {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    const putRepartidor = () =>\r\n    {\r\n        let nuevoRepartidor = {...repartidor}\r\n        nuevoRepartidor.rep_est = !checked + \"\"; //Convertir en string\r\n        const endpoint = `${URL_BACKEND}/repartidor/${repartidor.id}`;\r\n        fetch(endpoint, \r\n            {\r\n                method: 'PUT',\r\n                headers: {\"Content-type\": \"application/json\"},\r\n                body: JSON.stringify(nuevoRepartidor)\r\n            }).then((response) =>\r\n            {\r\n                response.json().then((data) =>\r\n                {\r\n                    setChecked(!checked);\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(repartidor.rep_est === \"true\")\r\n        {\r\n            setChecked(true);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <tr>\r\n            <td>{numero}</td>\r\n            <td>{repartidor.id}</td>\r\n            <td>{repartidor.rep_nom}</td>\r\n            <td>{repartidor.rep_ape}</td>\r\n            <td>\r\n                {\r\n                    repartidor.rep_est === \"true\" ?\r\n                    <span className=\"badge badge-success\">Habilitado</span> :\r\n                    <span className=\"badge badge-danger\">Inhabilitado</span>\r\n                }\r\n                <Switch checked={checked} onChange={putRepartidor} />\r\n            </td>\r\n            <td>{repartidor.rep_dni}</td>\r\n            <td><button className=\"btn btn-info\" onClick={() => \r\n                {\r\n                    setObjRepartidor({repartidor});\r\n                }}>Editar</button></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default RepartidorFila;\r\n","import React from 'react';\r\nimport RepartidorFila from './RepartidorFila';\r\n\r\nconst RepartidoresTabla = ({repartidores, setObjRepartidor}) => {\r\n    return (\r\n        <table className=\"table table-hover table-bordered table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th><strong>#</strong></th>\r\n                    <th>Id</th>\r\n                    <th>Nombre</th>\r\n                    <th>Apellido</th>\r\n                    <th>Estado</th>\r\n                    <th>DNI</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    repartidores.map((repartidor, i) => \r\n                    {\r\n                        return <RepartidorFila numero={i} repartidor={repartidor} key={repartidor.id} setObjRepartidor={setObjRepartidor}/>\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default RepartidoresTabla;\r\n","import React, { useState, useEffect } from 'react'\r\nimport Swal from 'sweetalert2';\r\nimport { URL_BACKEND } from '../../../variables/variables';\r\n\r\nconst RepartidorFormV2 = ({ getRepartidores, objRepartidor, setObjRepartidor }) => {\r\n\r\n  let formVacio = {\r\n    rep_nom: '',\r\n    rep_ape: '',\r\n    rep_est: '',\r\n    rep_dni: ''\r\n  };\r\n\r\n\r\n\r\n  const [formulario, setFormulario] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(\"efecto objRepartidor\");\r\n    if (objRepartidor) {\r\n      setFormulario(objRepartidor);\r\n    } else {\r\n      setFormulario(formVacio)\r\n    }\r\n  }, [objRepartidor])\r\n\r\n  console.log(\"state form\", formulario);\r\n\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const postRepartidor = (nuevoRepartidor) => {\r\n    const endpoint = `${URL_BACKEND}/repartidor`;\r\n\r\n    console.log(JSON.stringify(nuevoRepartidor));\r\n\r\n    fetch(endpoint, {\r\n      method: 'POST',\r\n      body: JSON.stringify(nuevoRepartidor),\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    }).then((response) => {\r\n      response.json().then((data) => {\r\n        Swal.fire({\r\n          title: 'Éxito!',\r\n          icon: 'success',\r\n          text: 'El Repartidor ha sido creado con éxito en la base de datos',\r\n          timer: 2000,\r\n        });\r\n        getRepartidores();\r\n\r\n\r\n      })\r\n    })\r\n  }\r\n  // Funcion que actualiza un repartidor en la BD\r\n  const putRepartidor = (nuevoRepartidor) => {\r\n    const endpoint = `${URL_BACKEND}/repartidor/${objRepartidor.id}`;\r\n    fetch(endpoint, {\r\n      method: 'PUT',\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify(nuevoRepartidor)\r\n    }).then((response) => {\r\n      response.json().then((data) => {\r\n        Swal.fire({\r\n          title: \"Actualizado!\",\r\n          text: \"Registro actualizado correctamente\",\r\n          icon: \"success\",\r\n          timer: 1500\r\n        });\r\n        // limpiar el form\r\n        getRepartidores();\r\n        setObjRepartidor(null);\r\n      })\r\n    })\r\n  }\r\n  const enviarFormulario = (e) => {\r\n    e.preventDefault()\r\n    if(formulario.rep_nom.trim() === \"\" || formulario.rep_ape.trim() === \"\" || formulario.rep_dni.trim() === \"\" || formulario.rep_est.trim() === \"\")\r\n    {\r\n      Swal.fire(\r\n        {\r\n          icon: \"error\",\r\n          title: \"Oe!\",\r\n          text: \"Todos los campos deben estar llenos\"\r\n        }\r\n      )\r\n    }\r\n    else\r\n    {\r\n      if (objRepartidor) {\r\n        // tengo editar el registro\r\n        // LLAMADA A LA API CON EL VERBO PUT (fetch)\r\n        Swal.fire({\r\n          title: '¿Seguro que desea editar el registro?',\r\n          icon: 'info',\r\n          text: 'Los cambios harán efecto de inmediato en la base de datos',\r\n          showCancelButton: true\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            console.log(\"OK PODEMOS EDITAR AL REPARTIDOR\");\r\n            putRepartidor(formulario);\r\n          }\r\n        })\r\n      } else {\r\n        // tengo crear el registro\r\n        Swal.fire({\r\n          title: '¿Seguro que desea crear el registro?',\r\n          icon: 'info',\r\n          text: 'Los cambios harán efecto de inmediato en la base de datos',\r\n          showCancelButton: true\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            console.log(\"OK PODEMOS CREAR AL USUARIO\");\r\n            // stuff PARA CREAR AL USUARIO\r\n            // aqui hacemos un POST  a mockapi\r\n            postRepartidor(formulario);\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h3 className=\"card-title\">Registrar Repartidor</h3>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <form className=\"row\" onSubmit={enviarFormulario}>\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"\">Nombre:</label>\r\n            <input type=\"text\" name=\"rep_nom\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n              value={formulario.rep_nom} />\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"\">Apellido:</label>\r\n            <input type=\"text\" name=\"rep_ape\"\r\n              className=\"form-control\" onChange={handleChange}\r\n              value={formulario.rep_ape} />\r\n\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"\">Estado:</label>\r\n            <select className=\"form-control\" name=\"rep_est\"\r\n              onChange={handleChange}\r\n              value={formulario.rep_est}>\r\n              <option value=\"\">-Seleccione-</option>\r\n              <option value=\"true\">Habilitado</option>\r\n              <option value=\"false\">Inhabilitado</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"\">Dni:</label>\r\n            <input type=\"text\" name=\"rep_dni\"\r\n              className=\"form-control\"\r\n              value={formulario.rep_dni}\r\n              onChange={handleChange} />\r\n\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            {\r\n              objRepartidor ?\r\n                <button className=\"btn btn-success btn-block\" type=\"submit\">\r\n                  Actualizar Repartidor\r\n                </button> :\r\n                <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n                  Crear Repartidor\r\n                </button>\r\n            }\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <button className=\"btn btn-danger btn-block\" type=\"button\">\r\n              Cancelar\r\n      </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RepartidorFormV2\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport Cargando from '../../components/Cargando';\r\nimport RepartidoresTabla from './componentes/RepartidoresTabla';\r\n// import RepartidorForm from './componentes/RepartidorForm';\r\nimport RepartidorFormV2 from './componentes/RepartidorFormV2';\r\n\r\nconst Repartidores = () => {\r\n\r\n    const endpoint = \"https://5ec8643e155c130016a909bf.mockapi.io/repartidor\";\r\n    const [cargando, setCargando] = useState(true);\r\n    const [repartidores, setRepartidores] = useState([]);\r\n    //esta variable va a contener un objeto de tipo repartidor, si o solo si, queremos editar a un repartidor, caso contrario sera nulo\r\n    const [objRepartidor, setObjRepartidor] = useState(null);\r\n\r\n    const getRepartidores = () =>\r\n    {\r\n        if(!cargando)\r\n        {\r\n            setCargando(true);\r\n        }\r\n        fetch(endpoint).then((response) => \r\n        {\r\n            response.json().then((data) => \r\n            {\r\n                setCargando(false);\r\n                setRepartidores(data);\r\n            })\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getRepartidores();\r\n       }, [])\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8\">\r\n                    <RepartidorFormV2 getRepartidores={getRepartidores} objRepartidor={objRepartidor} setObjRepartidor={setObjRepartidor}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n             <div className=\"col-md-8\">\r\n              {\r\n                  cargando === true ? <Cargando tipo=\"info\" texto=\"Cargando repartidores\"/> : <RepartidoresTabla repartidores={repartidores} setObjRepartidor={setObjRepartidor}/>\r\n              }\r\n             </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Repartidores;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { URL_BACKEND } from '../../../variables/variables';\r\n\r\nconst ProductoForm = ({getProductos, objProducto, setObjProducto}) => {\r\n\r\n    let formVacio = \r\n    {\r\n        pro_nom: '',\r\n        pro_prec: '',\r\n        pro_img: '',\r\n        pro_est: ''\r\n    };\r\n\r\n    const [formulario, setFormulario] = useState({});\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(objProducto)\r\n        {\r\n            setFormulario(objProducto);\r\n        }\r\n        else\r\n        {\r\n            setFormulario(formVacio);\r\n        }\r\n    }, [objProducto])\r\n\r\n    const handleChange = (e) =>\r\n    {\r\n        setFormulario(\r\n            {\r\n                ...formulario,\r\n                [e.target.name]: e.target.value\r\n            })\r\n    }\r\n\r\n    const postProducto = (nuevoProducto) =>\r\n    {\r\n        const endpoint = `${URL_BACKEND}/producto`;\r\n\r\n        fetch(endpoint, {\r\n            method: 'POST',\r\n            body: JSON.stringify(nuevoProducto),\r\n            headers: {\r\n              \"Content-type\": \"application/json\"\r\n            }\r\n          }).then((response) => {\r\n            response.json().then((data) => {\r\n              Swal.fire({\r\n                title: 'Éxito!',\r\n                icon: 'success',\r\n                text: 'El Producto ha sido creado con éxito en la base de datos',\r\n                timer: 2000,\r\n              });\r\n              getProductos();\r\n            })\r\n          })\r\n    }\r\n\r\n    const putProducto = (nuevoProducto) => {\r\n        const endpoint = `${URL_BACKEND}/producto/${objProducto.id}`;\r\n        fetch(endpoint, {\r\n          method: 'PUT',\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(nuevoProducto)\r\n        }).then((response) => {\r\n          response.json().then((data) => {\r\n            Swal.fire({\r\n              title: \"Actualizado!\",\r\n              text: \"Registro actualizado correctamente\",\r\n              icon: \"success\",\r\n              timer: 1500\r\n            });\r\n            getProductos();\r\n            setObjProducto(null);\r\n          })\r\n        })\r\n    }\r\n\r\n    const enviarFormulario = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        if(formulario.pro_nom.trim() === \"\" ||formulario.pro_prec.trim() === \"\" ||formulario.pro_img.trim() === \"\" ||formulario.pro_est.trim() === \"\")\r\n        {\r\n          Swal.fire(\r\n            {\r\n              icon: \"error\",\r\n              title: \"Oe!\",\r\n              text: \"Todos los campos deben estar llenos\"\r\n            }\r\n          )\r\n        }\r\n        else\r\n        {\r\n          if (objProducto) {\r\n            Swal.fire({\r\n              title: '¿Seguro que desea editar el registro?',\r\n              icon: 'info',\r\n              text: 'Los cambios harán efecto de inmediato en la base de datos',\r\n              showCancelButton: true\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                console.log(\"OK PODEMOS EDITAR EL PRODUCTO\");\r\n                putProducto(formulario);\r\n              }\r\n            })\r\n          } else {\r\n            Swal.fire({\r\n              title: '¿Seguro que desea crear el registro?',\r\n              icon: 'info',\r\n              text: 'Los cambios harán efecto de inmediato en la base de datos',\r\n              showCancelButton: true\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                console.log(\"OK PODEMOS CREAR EL PRODUCTO\");\r\n                postProducto(formulario);\r\n              }\r\n            })\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">Registrar Producto</h3>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form className=\"row\" onSubmit={enviarFormulario}>\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"\">Nombre:</label>\r\n                <input type=\"text\" name=\"pro_nom\"\r\n                  className=\"form-control\"\r\n                  onChange={handleChange}\r\n                  value={formulario.pro_nom} />\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"\">Precio:</label>\r\n                <input type=\"text\" name=\"pro_prec\"\r\n                  className=\"form-control\" onChange={handleChange}\r\n                  value={formulario.pro_prec} />\r\n    \r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"\">Estado:</label>\r\n                <select className=\"form-control\" name=\"pro_est\"\r\n                  onChange={handleChange}\r\n                  value={formulario.pro_est}>\r\n                  <option value=\"\">-Seleccione-</option>\r\n                  <option value=\"true\">ConStock</option>\r\n                  <option value=\"false\">SinStock</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"\">URL Imagen:</label>\r\n                <input type=\"text\" name=\"pro_img\"\r\n                  className=\"form-control\"\r\n                  value={formulario.pro_img}\r\n                  onChange={handleChange} />\r\n    \r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                {\r\n                  objProducto ?\r\n                    <button className=\"btn btn-success btn-block\" type=\"submit\">\r\n                      Actualizar Producto\r\n                    </button> :\r\n                    <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n                      Crear Producto\r\n                    </button>\r\n                }\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <button className=\"btn btn-danger btn-block\" type=\"button\">\r\n                  Cancelar\r\n          </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductoForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'react-switch';\r\nimport { URL_BACKEND } from '../../../variables/variables';\r\n\r\nconst ProductoFila = ({producto, numero, setObjProducto}) => {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const putProducto = () =>\r\n    {\r\n        let nuevoProducto = {...producto}\r\n        nuevoProducto.pro_est = !checked + \"\"; //Convertir en string\r\n        const endpoint = `${URL_BACKEND}/producto/${producto.id}`;\r\n        fetch(endpoint, \r\n            {\r\n                method: 'PUT',\r\n                headers: {\"Content-type\": \"application/json\"},\r\n                body: JSON.stringify(nuevoProducto)\r\n            }).then((response) =>\r\n            {\r\n                response.json().then((data) =>\r\n                {\r\n                    setChecked(!checked);\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(producto.pro_est === \"true\")\r\n        {\r\n            setChecked(true);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <tr>\r\n            <td>{numero}</td>\r\n            <td>{producto.id}</td>\r\n            <td>{producto.pro_nom}</td>\r\n            <td>S/. {producto.pro_prec}</td>\r\n            <td>\r\n                {\r\n                    producto.pro_est === \"true\" ? <span className=\"badge badge-success\">ConStock</span> : <span className=\"badge badge-danger\">SinStock</span>\r\n                }\r\n                <Switch checked={checked} onChange={putProducto} />    \r\n            </td>\r\n            <td>{producto.pro_img}</td>\r\n            <td><button className=\"btn btn-info\" onClick={() =>\r\n            {\r\n                setObjProducto({producto});\r\n            }}>Editar</button></td>  \r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ProductoFila;\r\n","import React from 'react';\r\nimport ProductoFila from './ProductoFila';\r\n\r\nconst ProductosTabla = ({productos, setObjProducto}) => {\r\n    return (\r\n        <table className=\"table table-hover table-bordered table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th><strong>#</strong></th>\r\n                    <th>Id</th>\r\n                    <th>Nombre</th>\r\n                    <th>Precio</th>\r\n                    <th>Estado</th>\r\n                    <th>Imagen</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    productos.map((producto, i) =>\r\n                    {\r\n                        return <ProductoFila numero={i} producto={producto} key={producto.id} setObjProducto={setObjProducto}/>\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default ProductosTabla;\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport Cargando from '../../components/Cargando';\r\nimport ProductoForm from './componentes/ProductoForm';\r\nimport ProductosTabla from './componentes/ProductosTabla';\r\n\r\nconst Productos = () => {\r\n\r\n    const endpoint = \"https://5ec8643e155c130016a909bf.mockapi.io/producto\";\r\n\r\n    const [cargando, setCargando] = useState(true);\r\n    const [productos, setProductos] = useState([]);\r\n    const [objProducto, setObjProducto] = useState(null);\r\n\r\n    const getProductos = () =>\r\n    {\r\n        if(!cargando)\r\n        {\r\n            setCargando(true);\r\n        }\r\n\r\n        fetch(endpoint).then((response) =>\r\n        {\r\n            response.json().then((data) =>\r\n            {\r\n                setCargando(false);\r\n                setProductos(data)\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        getProductos();\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8\">\r\n                    <ProductoForm getProductos={getProductos} objProducto={objProducto} setObjProducto={setObjProducto}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8\">\r\n                    {\r\n                        cargando === true ? <Cargando tipo=\"info\" texto=\"Cargando productos\"/> : <ProductosTabla productos={productos} setObjProducto={setObjProducto}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Productos;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                {/* <a className=\"navbar-brand\" href=\"!#\">Pedidos</a> */}\r\n                <Link className=\"navbar-brand\" to={\"/\"}>Pedidos App</Link>\r\n                <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"!#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <a className=\"nav-link\" href=\"!#\">Clientes</a> */}\r\n                            <Link className=\"nav-link\" to={\"/clientes\"}>Clientes</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to={\"/pedidos\"}>Pedidos</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to={\"/productos\"}>Productos</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to={\"/repartidores\"}>Repartidores</Link>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\"/>\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Clientes from './pages/clientes/Clientes';\nimport Pedidos from './pages/pedidos/Pedidos';\nimport Repartidores from './pages/repartidores/Repartidores';\nimport Productos from './pages/productos/Productos';\nimport Home from './pages/home/Home';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className=\"container-fluid pt-3\">\n        <Switch>\n          <Route path={\"/clientes\"} component={Clientes}/>\n          <Route path={\"/pedidos\"} component={Pedidos}/>\n          <Route path={\"/repartidores\"} component={Repartidores}/>\n          <Route path={\"/productos\"} component={Productos}/>\n          <Route path={\"/\"} component={Home}/>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}